name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash  # https://github.com/beeware/briefcase/pull/912

env:
  FORCE_COLOR: "1"

jobs:
  pre-commit:
    name: Pre-commit checks
    uses: beeware/.github/.github/workflows/pre-commit-run.yml@main
    with:
      pre-commit-source: "--group pre-commit"

  unit-tests:
    name: Unit tests
    needs: [ pre-commit ]
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        name: [ "macOS (x86_64)", "macOS (arm64)", "iOS", "Linux (x86_64)", "Linux (arm64)", "Windows (x86_64)", "Android" ] # Windows (arm64)
        include:
          - name: macOS (x86_64)
            platform: macos
            runs-on: macos-13
            archs: auto
          - name: macOS (arm64)
            platform: macos
            runs-on: macos-latest
            archs: auto,universal2
          - name: iOS
            platform: ios
            runs-on: macos-14
            archs: arm64_iphoneos arm64_iphonesimulator x86_64_iphonesimulator
          - name: Linux (x86_64)
            platform: linux
            runs-on: ubuntu-24.04
            archs: auto
          - name: Linux (arm64)
            platform: linux
            runs-on: ubuntu-24.04-arm
            archs: auto
          - name: Android
            platform: android
            runs-on: ubuntu-24.04
            archs: x86_64 arm64_v8a
          - name: Windows (x86_64)
            platform: windows
            runs-on: windows-latest
            archs: auto
          # - name: Windows (arm64)
          #   platform: windows
          #   runs-on: windows-latest-arm??
          #   archs: auto

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: "3.x"

    - name: Install cibuildwheel
      run: |
        python -m pip install -U pip
        python -m pip install --group cibuildwheel

    # - name: Install iOS SDK
    #   run: |
    #     sudo xcode-select -s "/Applications/Xcode_16.4.app"
    #     sudo xcodebuild -downloadPlatform iOS -buildVersion 18.5

    - name: Enable KVM group perms
      if: matrix.platform == 'android'
      run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
            | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

    - name: Build wheels
      run: python -m cibuildwheel
      env:
        CIBW_PLATFORM: ${{ matrix.platform }}
        CIBW_ARCHS: ${{ matrix.archs }}
        CIBW_BUILD: "cp*"
        CIBW_SKIP: "cp39*"

    - uses: actions/upload-artifact@v4.6.2
      with:
        name: wheels-${{ matrix.name }}
        path: ./wheelhouse/*.whl

    # # This step is only needed if you're trying to diagnose test failures that
    # # only occur in CI, and can't be reproduced locally. When it runs, it will
    # # open an SSH server (URL reported in the logs) so you can ssh into the CI
    # # machine.
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3
    #   if: failure()
